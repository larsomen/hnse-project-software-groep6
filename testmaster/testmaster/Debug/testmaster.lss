
testmaster.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000696  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000642  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000696  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006c8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  00000708  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000018a0  00000000  00000000  00000798  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000e04  00000000  00000000  00002038  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000080d  00000000  00000000  00002e3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001d4  00000000  00000000  0000364c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000067c  00000000  00000000  00003820  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000008d6  00000000  00000000  00003e9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00004772  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	be c0       	rjmp	.+380    	; 0x17e <__ctors_end>
   2:	00 00       	nop
   4:	d3 c0       	rjmp	.+422    	; 0x1ac <__bad_interrupt>
   6:	00 00       	nop
   8:	d1 c0       	rjmp	.+418    	; 0x1ac <__bad_interrupt>
   a:	00 00       	nop
   c:	cf c0       	rjmp	.+414    	; 0x1ac <__bad_interrupt>
   e:	00 00       	nop
  10:	cd c0       	rjmp	.+410    	; 0x1ac <__bad_interrupt>
  12:	00 00       	nop
  14:	cb c0       	rjmp	.+406    	; 0x1ac <__bad_interrupt>
  16:	00 00       	nop
  18:	c9 c0       	rjmp	.+402    	; 0x1ac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	c7 c0       	rjmp	.+398    	; 0x1ac <__bad_interrupt>
  1e:	00 00       	nop
  20:	c5 c0       	rjmp	.+394    	; 0x1ac <__bad_interrupt>
  22:	00 00       	nop
  24:	c3 c0       	rjmp	.+390    	; 0x1ac <__bad_interrupt>
  26:	00 00       	nop
  28:	c1 c0       	rjmp	.+386    	; 0x1ac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	bf c0       	rjmp	.+382    	; 0x1ac <__bad_interrupt>
  2e:	00 00       	nop
  30:	bd c0       	rjmp	.+378    	; 0x1ac <__bad_interrupt>
  32:	00 00       	nop
  34:	bb c0       	rjmp	.+374    	; 0x1ac <__bad_interrupt>
  36:	00 00       	nop
  38:	b9 c0       	rjmp	.+370    	; 0x1ac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	b7 c0       	rjmp	.+366    	; 0x1ac <__bad_interrupt>
  3e:	00 00       	nop
  40:	b5 c0       	rjmp	.+362    	; 0x1ac <__bad_interrupt>
  42:	00 00       	nop
  44:	b3 c0       	rjmp	.+358    	; 0x1ac <__bad_interrupt>
  46:	00 00       	nop
  48:	b1 c0       	rjmp	.+354    	; 0x1ac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	af c0       	rjmp	.+350    	; 0x1ac <__bad_interrupt>
  4e:	00 00       	nop
  50:	ad c0       	rjmp	.+346    	; 0x1ac <__bad_interrupt>
  52:	00 00       	nop
  54:	ab c0       	rjmp	.+342    	; 0x1ac <__bad_interrupt>
  56:	00 00       	nop
  58:	a9 c0       	rjmp	.+338    	; 0x1ac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	a7 c0       	rjmp	.+334    	; 0x1ac <__bad_interrupt>
  5e:	00 00       	nop
  60:	a5 c0       	rjmp	.+330    	; 0x1ac <__bad_interrupt>
  62:	00 00       	nop
  64:	94 c2       	rjmp	.+1320   	; 0x58e <__vector_25>
  66:	00 00       	nop
  68:	a1 c0       	rjmp	.+322    	; 0x1ac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	9f c0       	rjmp	.+318    	; 0x1ac <__bad_interrupt>
  6e:	00 00       	nop
  70:	9d c0       	rjmp	.+314    	; 0x1ac <__bad_interrupt>
  72:	00 00       	nop
  74:	9b c0       	rjmp	.+310    	; 0x1ac <__bad_interrupt>
  76:	00 00       	nop
  78:	99 c0       	rjmp	.+306    	; 0x1ac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	97 c0       	rjmp	.+302    	; 0x1ac <__bad_interrupt>
  7e:	00 00       	nop
  80:	95 c0       	rjmp	.+298    	; 0x1ac <__bad_interrupt>
  82:	00 00       	nop
  84:	93 c0       	rjmp	.+294    	; 0x1ac <__bad_interrupt>
  86:	00 00       	nop
  88:	91 c0       	rjmp	.+290    	; 0x1ac <__bad_interrupt>
  8a:	00 00       	nop
  8c:	8f c0       	rjmp	.+286    	; 0x1ac <__bad_interrupt>
  8e:	00 00       	nop
  90:	8d c0       	rjmp	.+282    	; 0x1ac <__bad_interrupt>
  92:	00 00       	nop
  94:	8b c0       	rjmp	.+278    	; 0x1ac <__bad_interrupt>
  96:	00 00       	nop
  98:	89 c0       	rjmp	.+274    	; 0x1ac <__bad_interrupt>
  9a:	00 00       	nop
  9c:	87 c0       	rjmp	.+270    	; 0x1ac <__bad_interrupt>
  9e:	00 00       	nop
  a0:	85 c0       	rjmp	.+266    	; 0x1ac <__bad_interrupt>
  a2:	00 00       	nop
  a4:	83 c0       	rjmp	.+262    	; 0x1ac <__bad_interrupt>
  a6:	00 00       	nop
  a8:	81 c0       	rjmp	.+258    	; 0x1ac <__bad_interrupt>
  aa:	00 00       	nop
  ac:	7f c0       	rjmp	.+254    	; 0x1ac <__bad_interrupt>
  ae:	00 00       	nop
  b0:	7d c0       	rjmp	.+250    	; 0x1ac <__bad_interrupt>
  b2:	00 00       	nop
  b4:	7b c0       	rjmp	.+246    	; 0x1ac <__bad_interrupt>
  b6:	00 00       	nop
  b8:	79 c0       	rjmp	.+242    	; 0x1ac <__bad_interrupt>
  ba:	00 00       	nop
  bc:	77 c0       	rjmp	.+238    	; 0x1ac <__bad_interrupt>
  be:	00 00       	nop
  c0:	75 c0       	rjmp	.+234    	; 0x1ac <__bad_interrupt>
  c2:	00 00       	nop
  c4:	73 c0       	rjmp	.+230    	; 0x1ac <__bad_interrupt>
  c6:	00 00       	nop
  c8:	71 c0       	rjmp	.+226    	; 0x1ac <__bad_interrupt>
  ca:	00 00       	nop
  cc:	6f c0       	rjmp	.+222    	; 0x1ac <__bad_interrupt>
  ce:	00 00       	nop
  d0:	6d c0       	rjmp	.+218    	; 0x1ac <__bad_interrupt>
  d2:	00 00       	nop
  d4:	6b c0       	rjmp	.+214    	; 0x1ac <__bad_interrupt>
  d6:	00 00       	nop
  d8:	69 c0       	rjmp	.+210    	; 0x1ac <__bad_interrupt>
  da:	00 00       	nop
  dc:	67 c0       	rjmp	.+206    	; 0x1ac <__bad_interrupt>
  de:	00 00       	nop
  e0:	65 c0       	rjmp	.+202    	; 0x1ac <__bad_interrupt>
  e2:	00 00       	nop
  e4:	81 02       	muls	r24, r17
  e6:	c6 02       	muls	r28, r22
  e8:	8b 02       	muls	r24, r27
  ea:	c6 02       	muls	r28, r22
  ec:	c6 02       	muls	r28, r22
  ee:	a9 02       	muls	r26, r25
  f0:	c6 02       	muls	r28, r22
  f2:	c6 02       	muls	r28, r22
  f4:	c6 02       	muls	r28, r22
  f6:	b3 02       	muls	r27, r19
  f8:	c6 02       	muls	r28, r22
  fa:	bd 02       	muls	r27, r29
  fc:	c6 02       	muls	r28, r22
  fe:	c6 02       	muls	r28, r22
 100:	c6 02       	muls	r28, r22
 102:	c6 02       	muls	r28, r22
 104:	c6 02       	muls	r28, r22
 106:	c6 02       	muls	r28, r22
 108:	c6 02       	muls	r28, r22
 10a:	c6 02       	muls	r28, r22
 10c:	c6 02       	muls	r28, r22
 10e:	c6 02       	muls	r28, r22
 110:	c6 02       	muls	r28, r22
 112:	c6 02       	muls	r28, r22
 114:	c6 02       	muls	r28, r22
 116:	c6 02       	muls	r28, r22
 118:	c6 02       	muls	r28, r22
 11a:	c6 02       	muls	r28, r22
 11c:	c6 02       	muls	r28, r22
 11e:	c6 02       	muls	r28, r22
 120:	c6 02       	muls	r28, r22
 122:	c6 02       	muls	r28, r22
 124:	c6 02       	muls	r28, r22
 126:	c6 02       	muls	r28, r22
 128:	c6 02       	muls	r28, r22
 12a:	c6 02       	muls	r28, r22
 12c:	c6 02       	muls	r28, r22
 12e:	c6 02       	muls	r28, r22
 130:	c6 02       	muls	r28, r22
 132:	c6 02       	muls	r28, r22
 134:	c6 02       	muls	r28, r22
 136:	c6 02       	muls	r28, r22
 138:	c6 02       	muls	r28, r22
 13a:	c6 02       	muls	r28, r22
 13c:	c6 02       	muls	r28, r22
 13e:	c6 02       	muls	r28, r22
 140:	c6 02       	muls	r28, r22
 142:	c6 02       	muls	r28, r22
 144:	c6 02       	muls	r28, r22
 146:	c6 02       	muls	r28, r22
 148:	c6 02       	muls	r28, r22
 14a:	c6 02       	muls	r28, r22
 14c:	c6 02       	muls	r28, r22
 14e:	c6 02       	muls	r28, r22
 150:	6d 02       	muls	r22, r29
 152:	c6 02       	muls	r28, r22
 154:	c6 02       	muls	r28, r22
 156:	77 02       	muls	r23, r23
 158:	9f 02       	muls	r25, r31
 15a:	c6 02       	muls	r28, r22
 15c:	c6 02       	muls	r28, r22
 15e:	c6 02       	muls	r28, r22
 160:	c6 02       	muls	r28, r22
 162:	c6 02       	muls	r28, r22
 164:	c6 02       	muls	r28, r22
 166:	c6 02       	muls	r28, r22
 168:	c6 02       	muls	r28, r22
 16a:	c6 02       	muls	r28, r22
 16c:	c6 02       	muls	r28, r22
 16e:	c6 02       	muls	r28, r22
 170:	95 02       	muls	r25, r21
 172:	c6 02       	muls	r28, r22
 174:	63 02       	muls	r22, r19
 176:	c6 02       	muls	r28, r22
 178:	c6 02       	muls	r28, r22
 17a:	c6 02       	muls	r28, r22
 17c:	59 02       	muls	r21, r25

0000017e <__ctors_end>:
 17e:	11 24       	eor	r1, r1
 180:	1f be       	out	0x3f, r1	; 63
 182:	cf ef       	ldi	r28, 0xFF	; 255
 184:	d1 e2       	ldi	r29, 0x21	; 33
 186:	de bf       	out	0x3e, r29	; 62
 188:	cd bf       	out	0x3d, r28	; 61
 18a:	00 e0       	ldi	r16, 0x00	; 0
 18c:	0c bf       	out	0x3c, r16	; 60

0000018e <__do_copy_data>:
 18e:	12 e0       	ldi	r17, 0x02	; 2
 190:	a0 e0       	ldi	r26, 0x00	; 0
 192:	b2 e0       	ldi	r27, 0x02	; 2
 194:	e2 e4       	ldi	r30, 0x42	; 66
 196:	f6 e0       	ldi	r31, 0x06	; 6
 198:	00 e0       	ldi	r16, 0x00	; 0
 19a:	0b bf       	out	0x3b, r16	; 59
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <__do_copy_data+0x14>
 19e:	07 90       	elpm	r0, Z+
 1a0:	0d 92       	st	X+, r0
 1a2:	a0 30       	cpi	r26, 0x00	; 0
 1a4:	b1 07       	cpc	r27, r17
 1a6:	d9 f7       	brne	.-10     	; 0x19e <__do_copy_data+0x10>
 1a8:	af d0       	rcall	.+350    	; 0x308 <main>
 1aa:	49 c2       	rjmp	.+1170   	; 0x63e <_exit>

000001ac <__bad_interrupt>:
 1ac:	29 cf       	rjmp	.-430    	; 0x0 <__vectors>

000001ae <init_master>:
	else{
		r = "ERR";
	}

	return r;
}
 1ae:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
 1b2:	88 e4       	ldi	r24, 0x48	; 72
 1b4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
 1b8:	84 e0       	ldi	r24, 0x04	; 4
 1ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
 1be:	08 95       	ret

000001c0 <ontvangen>:
 1c0:	af 92       	push	r10
 1c2:	bf 92       	push	r11
 1c4:	df 92       	push	r13
 1c6:	ef 92       	push	r14
 1c8:	ff 92       	push	r15
 1ca:	0f 93       	push	r16
 1cc:	1f 93       	push	r17
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	cd b7       	in	r28, 0x3d	; 61
 1d4:	de b7       	in	r29, 0x3e	; 62
 1d6:	2f 97       	sbiw	r28, 0x0f	; 15
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	f8 94       	cli
 1dc:	de bf       	out	0x3e, r29	; 62
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	cd bf       	out	0x3d, r28	; 61
 1e2:	ec eb       	ldi	r30, 0xBC	; 188
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	90 81       	ld	r25, Z
 1e8:	90 62       	ori	r25, 0x20	; 32
 1ea:	90 83       	st	Z, r25
 1ec:	90 81       	ld	r25, Z
 1ee:	99 23       	and	r25, r25
 1f0:	ec f7       	brge	.-6      	; 0x1ec <ontvangen+0x2c>
 1f2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
 1f6:	99 83       	std	Y+1, r25	; 0x01
 1f8:	88 0f       	add	r24, r24
 1fa:	8f 5f       	subi	r24, 0xFF	; 255
 1fc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
 200:	84 e8       	ldi	r24, 0x84	; 132
 202:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
 206:	ec eb       	ldi	r30, 0xBC	; 188
 208:	f0 e0       	ldi	r31, 0x00	; 0
 20a:	80 81       	ld	r24, Z
 20c:	88 23       	and	r24, r24
 20e:	ec f7       	brge	.-6      	; 0x20a <ontvangen+0x4a>
 210:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
 214:	8a 83       	std	Y+2, r24	; 0x02
 216:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
 21a:	db 01       	movw	r26, r22
 21c:	8c 93       	st	X, r24
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	50 e0       	ldi	r21, 0x00	; 0
 222:	41 50       	subi	r20, 0x01	; 1
 224:	51 09       	sbc	r21, r1
 226:	ec eb       	ldi	r30, 0xBC	; 188
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	0f 2e       	mov	r0, r31
 22c:	f4 ec       	ldi	r31, 0xC4	; 196
 22e:	ef 2e       	mov	r14, r31
 230:	f0 2d       	mov	r31, r0
 232:	0f 2e       	mov	r0, r31
 234:	f4 e8       	ldi	r31, 0x84	; 132
 236:	df 2e       	mov	r13, r31
 238:	f0 2d       	mov	r31, r0
 23a:	09 eb       	ldi	r16, 0xB9	; 185
 23c:	10 e0       	ldi	r17, 0x00	; 0
 23e:	0f 2e       	mov	r0, r31
 240:	fb eb       	ldi	r31, 0xBB	; 187
 242:	af 2e       	mov	r10, r31
 244:	b1 2c       	mov	r11, r1
 246:	f0 2d       	mov	r31, r0
 248:	29 2f       	mov	r18, r25
 24a:	30 e0       	ldi	r19, 0x00	; 0
 24c:	24 17       	cp	r18, r20
 24e:	35 07       	cpc	r19, r21
 250:	11 f4       	brne	.+4      	; 0x256 <ontvangen+0x96>
 252:	d0 82       	st	Z, r13
 254:	01 c0       	rjmp	.+2      	; 0x258 <ontvangen+0x98>
 256:	e0 82       	st	Z, r14
 258:	80 81       	ld	r24, Z
 25a:	88 23       	and	r24, r24
 25c:	ec f7       	brge	.-6      	; 0x258 <ontvangen+0x98>
 25e:	d8 01       	movw	r26, r16
 260:	8c 91       	ld	r24, X
 262:	a1 e0       	ldi	r26, 0x01	; 1
 264:	b0 e0       	ldi	r27, 0x00	; 0
 266:	ac 0f       	add	r26, r28
 268:	bd 1f       	adc	r27, r29
 26a:	2a 0f       	add	r18, r26
 26c:	3b 1f       	adc	r19, r27
 26e:	d9 01       	movw	r26, r18
 270:	8c 93       	st	X, r24
 272:	d5 01       	movw	r26, r10
 274:	fc 90       	ld	r15, X
 276:	9b 01       	movw	r18, r22
 278:	29 0f       	add	r18, r25
 27a:	31 1d       	adc	r19, r1
 27c:	d9 01       	movw	r26, r18
 27e:	fc 92       	st	X, r15
 280:	9f 5f       	subi	r25, 0xFF	; 255
 282:	80 35       	cpi	r24, 0x50	; 80
 284:	09 f3       	breq	.-62     	; 0x248 <ontvangen+0x88>
 286:	84 e9       	ldi	r24, 0x94	; 148
 288:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
 28c:	2f 96       	adiw	r28, 0x0f	; 15
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	f8 94       	cli
 292:	de bf       	out	0x3e, r29	; 62
 294:	0f be       	out	0x3f, r0	; 63
 296:	cd bf       	out	0x3d, r28	; 61
 298:	df 91       	pop	r29
 29a:	cf 91       	pop	r28
 29c:	1f 91       	pop	r17
 29e:	0f 91       	pop	r16
 2a0:	ff 90       	pop	r15
 2a2:	ef 90       	pop	r14
 2a4:	df 90       	pop	r13
 2a6:	bf 90       	pop	r11
 2a8:	af 90       	pop	r10
 2aa:	08 95       	ret

000002ac <verzenden>:
 2ac:	ec eb       	ldi	r30, 0xBC	; 188
 2ae:	f0 e0       	ldi	r31, 0x00	; 0
 2b0:	90 81       	ld	r25, Z
 2b2:	90 62       	ori	r25, 0x20	; 32
 2b4:	90 83       	st	Z, r25
 2b6:	90 81       	ld	r25, Z
 2b8:	99 23       	and	r25, r25
 2ba:	ec f7       	brge	.-6      	; 0x2b6 <verzenden+0xa>
 2bc:	88 0f       	add	r24, r24
 2be:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
 2c2:	84 e8       	ldi	r24, 0x84	; 132
 2c4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
 2c8:	ec eb       	ldi	r30, 0xBC	; 188
 2ca:	f0 e0       	ldi	r31, 0x00	; 0
 2cc:	80 81       	ld	r24, Z
 2ce:	88 23       	and	r24, r24
 2d0:	ec f7       	brge	.-6      	; 0x2cc <verzenden+0x20>
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
 2d8:	84 e8       	ldi	r24, 0x84	; 132
 2da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
 2de:	ec eb       	ldi	r30, 0xBC	; 188
 2e0:	f0 e0       	ldi	r31, 0x00	; 0
 2e2:	80 81       	ld	r24, Z
 2e4:	88 23       	and	r24, r24
 2e6:	ec f7       	brge	.-6      	; 0x2e2 <verzenden+0x36>
 2e8:	84 e9       	ldi	r24, 0x94	; 148
 2ea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
 2ee:	08 95       	ret

000002f0 <initUSART>:
 2f0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 2f4:	87 e6       	ldi	r24, 0x67	; 103
 2f6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 2fa:	88 e9       	ldi	r24, 0x98	; 152
 2fc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 300:	86 e0       	ldi	r24, 0x06	; 6
 302:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 306:	08 95       	ret

00000308 <main>:
 308:	83 e0       	ldi	r24, 0x03	; 3
 30a:	8b b9       	out	0x0b, r24	; 11
 30c:	f1 df       	rcall	.-30     	; 0x2f0 <initUSART>
 30e:	4f df       	rcall	.-354    	; 0x1ae <init_master>
 310:	78 94       	sei
 312:	6e e1       	ldi	r22, 0x1E	; 30
 314:	88 e0       	ldi	r24, 0x08	; 8
 316:	ca df       	rcall	.-108    	; 0x2ac <verzenden>
 318:	2f ef       	ldi	r18, 0xFF	; 255
 31a:	81 ee       	ldi	r24, 0xE1	; 225
 31c:	94 e0       	ldi	r25, 0x04	; 4
 31e:	21 50       	subi	r18, 0x01	; 1
 320:	80 40       	sbci	r24, 0x00	; 0
 322:	90 40       	sbci	r25, 0x00	; 0
 324:	e1 f7       	brne	.-8      	; 0x31e <main+0x16>
 326:	00 c0       	rjmp	.+0      	; 0x328 <main+0x20>
 328:	00 00       	nop
 32a:	f3 cf       	rjmp	.-26     	; 0x312 <main+0xa>

0000032c <writeChar>:
 32c:	e0 ec       	ldi	r30, 0xC0	; 192
 32e:	f0 e0       	ldi	r31, 0x00	; 0
 330:	90 81       	ld	r25, Z
 332:	95 ff       	sbrs	r25, 5
 334:	fd cf       	rjmp	.-6      	; 0x330 <writeChar+0x4>
 336:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 33a:	08 95       	ret

0000033c <leesKompas>:
 33c:	cf 93       	push	r28
 33e:	df 93       	push	r29
 340:	cd b7       	in	r28, 0x3d	; 61
 342:	de b7       	in	r29, 0x3e	; 62
 344:	2a 97       	sbiw	r28, 0x0a	; 10
 346:	0f b6       	in	r0, 0x3f	; 63
 348:	f8 94       	cli
 34a:	de bf       	out	0x3e, r29	; 62
 34c:	0f be       	out	0x3f, r0	; 63
 34e:	cd bf       	out	0x3d, r28	; 61
 350:	62 e0       	ldi	r22, 0x02	; 2
 352:	80 e6       	ldi	r24, 0x60	; 96
 354:	ab df       	rcall	.-170    	; 0x2ac <verzenden>
 356:	42 e0       	ldi	r20, 0x02	; 2
 358:	be 01       	movw	r22, r28
 35a:	6f 5f       	subi	r22, 0xFF	; 255
 35c:	7f 4f       	sbci	r23, 0xFF	; 255
 35e:	80 e6       	ldi	r24, 0x60	; 96
 360:	2f df       	rcall	.-418    	; 0x1c0 <ontvangen>
 362:	89 81       	ldd	r24, Y+1	; 0x01
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	98 2f       	mov	r25, r24
 368:	88 27       	eor	r24, r24
 36a:	2a 81       	ldd	r18, Y+2	; 0x02
 36c:	82 0f       	add	r24, r18
 36e:	91 1d       	adc	r25, r1
 370:	6a e0       	ldi	r22, 0x0A	; 10
 372:	70 e0       	ldi	r23, 0x00	; 0
 374:	35 d1       	rcall	.+618    	; 0x5e0 <__divmodhi4>
 376:	cb 01       	movw	r24, r22
 378:	2a 96       	adiw	r28, 0x0a	; 10
 37a:	0f b6       	in	r0, 0x3f	; 63
 37c:	f8 94       	cli
 37e:	de bf       	out	0x3e, r29	; 62
 380:	0f be       	out	0x3f, r0	; 63
 382:	cd bf       	out	0x3d, r28	; 61
 384:	df 91       	pop	r29
 386:	cf 91       	pop	r28
 388:	08 95       	ret

0000038a <gaNaarHoekR>:

void gaNaarHoekR(int hoek){
 38a:	0f 93       	push	r16
 38c:	1f 93       	push	r17
 38e:	cf 93       	push	r28
 390:	df 93       	push	r29
 392:	ec 01       	movw	r28, r24
	int huidig = leesKompas();
 394:	d3 df       	rcall	.-90     	; 0x33c <leesKompas>
	int bestem = huidig + hoek;
 396:	c8 0f       	add	r28, r24
 398:	d9 1f       	adc	r29, r25
	if (bestem < 359)
 39a:	c7 36       	cpi	r28, 0x67	; 103
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	d8 07       	cpc	r29, r24
 3a0:	64 f0       	brlt	.+24     	; 0x3ba <gaNaarHoekR+0x30>
			_delay_ms(10);
		}
		verzenden(RP6, 0);
	}
	else{
		while(leesKompas() > (bestem -360)){
 3a2:	c8 56       	subi	r28, 0x68	; 104
 3a4:	d1 40       	sbci	r29, 0x01	; 1
 3a6:	1a c0       	rjmp	.+52     	; 0x3dc <gaNaarHoekR+0x52>
	int huidig = leesKompas();
	int bestem = huidig + hoek;
	if (bestem < 359)
	{
		while(leesKompas() < bestem){
			verzenden(RP6, 14);
 3a8:	6e e0       	ldi	r22, 0x0E	; 14
 3aa:	88 e0       	ldi	r24, 0x08	; 8
 3ac:	7f df       	rcall	.-258    	; 0x2ac <verzenden>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3ae:	8f e3       	ldi	r24, 0x3F	; 63
 3b0:	9c e9       	ldi	r25, 0x9C	; 156
 3b2:	01 97       	sbiw	r24, 0x01	; 1
 3b4:	f1 f7       	brne	.-4      	; 0x3b2 <gaNaarHoekR+0x28>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <gaNaarHoekR+0x2e>
 3b8:	00 00       	nop
void gaNaarHoekR(int hoek){
	int huidig = leesKompas();
	int bestem = huidig + hoek;
	if (bestem < 359)
	{
		while(leesKompas() < bestem){
 3ba:	c0 df       	rcall	.-128    	; 0x33c <leesKompas>
 3bc:	8c 17       	cp	r24, r28
 3be:	9d 07       	cpc	r25, r29
 3c0:	9c f3       	brlt	.-26     	; 0x3a8 <gaNaarHoekR+0x1e>
			verzenden(RP6, 14);
			_delay_ms(10);
		}
		verzenden(RP6, 0);
 3c2:	60 e0       	ldi	r22, 0x00	; 0
 3c4:	88 e0       	ldi	r24, 0x08	; 8
 3c6:	72 df       	rcall	.-284    	; 0x2ac <verzenden>
 3c8:	1f c0       	rjmp	.+62     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
	}
	else{
		while(leesKompas() > (bestem -360)){
			verzenden(RP6, 14);
 3ca:	6e e0       	ldi	r22, 0x0E	; 14
 3cc:	88 e0       	ldi	r24, 0x08	; 8
 3ce:	6e df       	rcall	.-292    	; 0x2ac <verzenden>
 3d0:	8f e3       	ldi	r24, 0x3F	; 63
 3d2:	9c e9       	ldi	r25, 0x9C	; 156
 3d4:	01 97       	sbiw	r24, 0x01	; 1
 3d6:	f1 f7       	brne	.-4      	; 0x3d4 <gaNaarHoekR+0x4a>
 3d8:	00 c0       	rjmp	.+0      	; 0x3da <gaNaarHoekR+0x50>
 3da:	00 00       	nop
			_delay_ms(10);
		}
		verzenden(RP6, 0);
	}
	else{
		while(leesKompas() > (bestem -360)){
 3dc:	af df       	rcall	.-162    	; 0x33c <leesKompas>
 3de:	8e 01       	movw	r16, r28
 3e0:	c8 17       	cp	r28, r24
 3e2:	d9 07       	cpc	r29, r25
 3e4:	94 f3       	brlt	.-28     	; 0x3ca <gaNaarHoekR+0x40>
 3e6:	09 c0       	rjmp	.+18     	; 0x3fa <gaNaarHoekR+0x70>
			verzenden(RP6, 14);
			_delay_ms(10);
		}
		while(leesKompas() < (bestem-360)){
			verzenden(RP6, 14);
 3e8:	6e e0       	ldi	r22, 0x0E	; 14
 3ea:	88 e0       	ldi	r24, 0x08	; 8
 3ec:	5f df       	rcall	.-322    	; 0x2ac <verzenden>
 3ee:	8f e3       	ldi	r24, 0x3F	; 63
 3f0:	9c e9       	ldi	r25, 0x9C	; 156
 3f2:	01 97       	sbiw	r24, 0x01	; 1
 3f4:	f1 f7       	brne	.-4      	; 0x3f2 <gaNaarHoekR+0x68>
 3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <gaNaarHoekR+0x6e>
 3f8:	00 00       	nop
	else{
		while(leesKompas() > (bestem -360)){
			verzenden(RP6, 14);
			_delay_ms(10);
		}
		while(leesKompas() < (bestem-360)){
 3fa:	a0 df       	rcall	.-192    	; 0x33c <leesKompas>
 3fc:	80 17       	cp	r24, r16
 3fe:	91 07       	cpc	r25, r17
 400:	9c f3       	brlt	.-26     	; 0x3e8 <gaNaarHoekR+0x5e>
			verzenden(RP6, 14);
			_delay_ms(10);
		}
		verzenden(RP6, 0);
 402:	60 e0       	ldi	r22, 0x00	; 0
 404:	88 e0       	ldi	r24, 0x08	; 8
 406:	52 df       	rcall	.-348    	; 0x2ac <verzenden>
	}
}
 408:	df 91       	pop	r29
 40a:	cf 91       	pop	r28
 40c:	1f 91       	pop	r17
 40e:	0f 91       	pop	r16
 410:	08 95       	ret

00000412 <gaNaarHoekL>:

void gaNaarHoekL(int hoek){
 412:	0f 93       	push	r16
 414:	1f 93       	push	r17
 416:	cf 93       	push	r28
 418:	df 93       	push	r29
 41a:	ec 01       	movw	r28, r24
	int huidig = leesKompas();
 41c:	8f df       	rcall	.-226    	; 0x33c <leesKompas>
	int bestem = huidig - hoek;
 41e:	8c 1b       	sub	r24, r28
 420:	9d 0b       	sbc	r25, r29
 422:	ec 01       	movw	r28, r24
	if (bestem > 0)
 424:	18 16       	cp	r1, r24
 426:	19 06       	cpc	r1, r25
 428:	64 f0       	brlt	.+24     	; 0x442 <gaNaarHoekL+0x30>
			_delay_ms(10);
		}
		verzenden(RP6, 0);
	}
	else{
		while(leesKompas() < (bestem+360)){
 42a:	c8 59       	subi	r28, 0x98	; 152
 42c:	de 4f       	sbci	r29, 0xFE	; 254
 42e:	1a c0       	rjmp	.+52     	; 0x464 <gaNaarHoekL+0x52>
	int huidig = leesKompas();
	int bestem = huidig - hoek;
	if (bestem > 0)
	{
		while(leesKompas() > bestem){
			verzenden(RP6, 13);
 430:	6d e0       	ldi	r22, 0x0D	; 13
 432:	88 e0       	ldi	r24, 0x08	; 8
 434:	3b df       	rcall	.-394    	; 0x2ac <verzenden>
 436:	8f e3       	ldi	r24, 0x3F	; 63
 438:	9c e9       	ldi	r25, 0x9C	; 156
 43a:	01 97       	sbiw	r24, 0x01	; 1
 43c:	f1 f7       	brne	.-4      	; 0x43a <gaNaarHoekL+0x28>
 43e:	00 c0       	rjmp	.+0      	; 0x440 <gaNaarHoekL+0x2e>
 440:	00 00       	nop
void gaNaarHoekL(int hoek){
	int huidig = leesKompas();
	int bestem = huidig - hoek;
	if (bestem > 0)
	{
		while(leesKompas() > bestem){
 442:	7c df       	rcall	.-264    	; 0x33c <leesKompas>
 444:	c8 17       	cp	r28, r24
 446:	d9 07       	cpc	r29, r25
 448:	9c f3       	brlt	.-26     	; 0x430 <gaNaarHoekL+0x1e>
			verzenden(RP6, 13);
			_delay_ms(10);
		}
		verzenden(RP6, 0);
 44a:	60 e0       	ldi	r22, 0x00	; 0
 44c:	88 e0       	ldi	r24, 0x08	; 8
 44e:	2e df       	rcall	.-420    	; 0x2ac <verzenden>
 450:	1f c0       	rjmp	.+62     	; 0x490 <gaNaarHoekL+0x7e>
	}
	else{
		while(leesKompas() < (bestem+360)){
			verzenden(RP6, 13);
 452:	6d e0       	ldi	r22, 0x0D	; 13
 454:	88 e0       	ldi	r24, 0x08	; 8
 456:	2a df       	rcall	.-428    	; 0x2ac <verzenden>
 458:	8f e3       	ldi	r24, 0x3F	; 63
 45a:	9c e9       	ldi	r25, 0x9C	; 156
 45c:	01 97       	sbiw	r24, 0x01	; 1
 45e:	f1 f7       	brne	.-4      	; 0x45c <gaNaarHoekL+0x4a>
 460:	00 c0       	rjmp	.+0      	; 0x462 <gaNaarHoekL+0x50>
 462:	00 00       	nop
			_delay_ms(10);
		}
		verzenden(RP6, 0);
	}
	else{
		while(leesKompas() < (bestem+360)){
 464:	6b df       	rcall	.-298    	; 0x33c <leesKompas>
 466:	8e 01       	movw	r16, r28
 468:	8c 17       	cp	r24, r28
 46a:	9d 07       	cpc	r25, r29
 46c:	94 f3       	brlt	.-28     	; 0x452 <gaNaarHoekL+0x40>
 46e:	09 c0       	rjmp	.+18     	; 0x482 <gaNaarHoekL+0x70>
			verzenden(RP6, 13);
			_delay_ms(10);
		}
		while(leesKompas() > (bestem +360)){
			verzenden(RP6, 13);
 470:	6d e0       	ldi	r22, 0x0D	; 13
 472:	88 e0       	ldi	r24, 0x08	; 8
 474:	1b df       	rcall	.-458    	; 0x2ac <verzenden>
 476:	8f e3       	ldi	r24, 0x3F	; 63
 478:	9c e9       	ldi	r25, 0x9C	; 156
 47a:	01 97       	sbiw	r24, 0x01	; 1
 47c:	f1 f7       	brne	.-4      	; 0x47a <gaNaarHoekL+0x68>
 47e:	00 c0       	rjmp	.+0      	; 0x480 <gaNaarHoekL+0x6e>
 480:	00 00       	nop
	else{
		while(leesKompas() < (bestem+360)){
			verzenden(RP6, 13);
			_delay_ms(10);
		}
		while(leesKompas() > (bestem +360)){
 482:	5c df       	rcall	.-328    	; 0x33c <leesKompas>
 484:	08 17       	cp	r16, r24
 486:	19 07       	cpc	r17, r25
 488:	9c f3       	brlt	.-26     	; 0x470 <gaNaarHoekL+0x5e>
			verzenden(RP6, 13);
			_delay_ms(10);
		}
		verzenden(RP6, 0);
 48a:	60 e0       	ldi	r22, 0x00	; 0
 48c:	88 e0       	ldi	r24, 0x08	; 8
 48e:	0e df       	rcall	.-484    	; 0x2ac <verzenden>
	}
 490:	df 91       	pop	r29
 492:	cf 91       	pop	r28
 494:	1f 91       	pop	r17
 496:	0f 91       	pop	r16
 498:	08 95       	ret

0000049a <Input>:
ISR(USART0_RX_vect){
	Input(UDR0);
}

void Input(char in){
	switch(in){
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	fc 01       	movw	r30, r24
 49e:	bb 97       	sbiw	r30, 0x2b	; 43
 4a0:	ed 34       	cpi	r30, 0x4D	; 77
 4a2:	f1 05       	cpc	r31, r1
 4a4:	08 f0       	brcs	.+2      	; 0x4a8 <Input+0xe>
 4a6:	72 c0       	rjmp	.+228    	; 0x58c <Input+0xf2>
 4a8:	88 27       	eor	r24, r24
 4aa:	ee 58       	subi	r30, 0x8E	; 142
 4ac:	ff 4f       	sbci	r31, 0xFF	; 255
 4ae:	8f 4f       	sbci	r24, 0xFF	; 255
 4b0:	aa c0       	rjmp	.+340    	; 0x606 <__tablejump2__>
		case 'w':
		writeChar('\t');writeChar(in);writeChar('\r');
 4b2:	89 e0       	ldi	r24, 0x09	; 9
 4b4:	3b df       	rcall	.-394    	; 0x32c <writeChar>
 4b6:	87 e7       	ldi	r24, 0x77	; 119
 4b8:	39 df       	rcall	.-398    	; 0x32c <writeChar>
 4ba:	8d e0       	ldi	r24, 0x0D	; 13
 4bc:	37 df       	rcall	.-402    	; 0x32c <writeChar>
		verzenden(DEVICE_ADRES, 1);
 4be:	61 e0       	ldi	r22, 0x01	; 1
 4c0:	88 e0       	ldi	r24, 0x08	; 8
 4c2:	f4 ce       	rjmp	.-536    	; 0x2ac <verzenden>
		break;
 4c4:	08 95       	ret
		case 's':
		writeChar('\t');writeChar(in);writeChar('\r');
 4c6:	89 e0       	ldi	r24, 0x09	; 9
 4c8:	31 df       	rcall	.-414    	; 0x32c <writeChar>
 4ca:	83 e7       	ldi	r24, 0x73	; 115
 4cc:	2f df       	rcall	.-418    	; 0x32c <writeChar>
 4ce:	8d e0       	ldi	r24, 0x0D	; 13
 4d0:	2d df       	rcall	.-422    	; 0x32c <writeChar>
		verzenden(DEVICE_ADRES, 2);
 4d2:	62 e0       	ldi	r22, 0x02	; 2
 4d4:	88 e0       	ldi	r24, 0x08	; 8
 4d6:	ea ce       	rjmp	.-556    	; 0x2ac <verzenden>
		break;
 4d8:	08 95       	ret
		case 'a':
		writeChar('\t');writeChar(in);writeChar('\r');
 4da:	89 e0       	ldi	r24, 0x09	; 9
 4dc:	27 df       	rcall	.-434    	; 0x32c <writeChar>
 4de:	81 e6       	ldi	r24, 0x61	; 97
 4e0:	25 df       	rcall	.-438    	; 0x32c <writeChar>
 4e2:	8d e0       	ldi	r24, 0x0D	; 13
 4e4:	23 df       	rcall	.-442    	; 0x32c <writeChar>
		verzenden(DEVICE_ADRES, 3);
 4e6:	63 e0       	ldi	r22, 0x03	; 3
 4e8:	88 e0       	ldi	r24, 0x08	; 8
 4ea:	e0 ce       	rjmp	.-576    	; 0x2ac <verzenden>
		break;
 4ec:	08 95       	ret
		case 'd':
		writeChar('\t');writeChar(in);writeChar('\r');
 4ee:	89 e0       	ldi	r24, 0x09	; 9
 4f0:	1d df       	rcall	.-454    	; 0x32c <writeChar>
 4f2:	84 e6       	ldi	r24, 0x64	; 100
 4f4:	1b df       	rcall	.-458    	; 0x32c <writeChar>
 4f6:	8d e0       	ldi	r24, 0x0D	; 13
 4f8:	19 df       	rcall	.-462    	; 0x32c <writeChar>
		verzenden(DEVICE_ADRES, 4);
 4fa:	64 e0       	ldi	r22, 0x04	; 4
 4fc:	88 e0       	ldi	r24, 0x08	; 8
 4fe:	d6 ce       	rjmp	.-596    	; 0x2ac <verzenden>
		break;
 500:	08 95       	ret
		case '+':
		writeChar('\t');writeChar(in);writeChar('\r');
 502:	89 e0       	ldi	r24, 0x09	; 9
 504:	13 df       	rcall	.-474    	; 0x32c <writeChar>
 506:	8b e2       	ldi	r24, 0x2B	; 43
 508:	11 df       	rcall	.-478    	; 0x32c <writeChar>
 50a:	8d e0       	ldi	r24, 0x0D	; 13
 50c:	0f df       	rcall	.-482    	; 0x32c <writeChar>
		verzenden(DEVICE_ADRES, 5);
 50e:	65 e0       	ldi	r22, 0x05	; 5
 510:	88 e0       	ldi	r24, 0x08	; 8
 512:	cc ce       	rjmp	.-616    	; 0x2ac <verzenden>
		break;
 514:	08 95       	ret
		case '-':
		writeChar('\t');writeChar(in);writeChar('\r');
 516:	89 e0       	ldi	r24, 0x09	; 9
 518:	09 df       	rcall	.-494    	; 0x32c <writeChar>
 51a:	8d e2       	ldi	r24, 0x2D	; 45
 51c:	07 df       	rcall	.-498    	; 0x32c <writeChar>
 51e:	8d e0       	ldi	r24, 0x0D	; 13
 520:	05 df       	rcall	.-502    	; 0x32c <writeChar>
		verzenden(DEVICE_ADRES, 6);
 522:	66 e0       	ldi	r22, 0x06	; 6
 524:	88 e0       	ldi	r24, 0x08	; 8
 526:	c2 ce       	rjmp	.-636    	; 0x2ac <verzenden>
		break;
 528:	08 95       	ret
		case 'q':
		writeChar('\t');writeChar(in);writeChar('\r');
 52a:	89 e0       	ldi	r24, 0x09	; 9
 52c:	ff de       	rcall	.-514    	; 0x32c <writeChar>
 52e:	81 e7       	ldi	r24, 0x71	; 113
 530:	fd de       	rcall	.-518    	; 0x32c <writeChar>
 532:	8d e0       	ldi	r24, 0x0D	; 13
 534:	fb de       	rcall	.-522    	; 0x32c <writeChar>
		verzenden(DEVICE_ADRES, 7);
 536:	67 e0       	ldi	r22, 0x07	; 7
 538:	88 e0       	ldi	r24, 0x08	; 8
 53a:	b8 ce       	rjmp	.-656    	; 0x2ac <verzenden>
		break;
 53c:	08 95       	ret
		case 'e':
		writeChar('\t');writeChar(in);writeChar('\r');
 53e:	89 e0       	ldi	r24, 0x09	; 9
 540:	f5 de       	rcall	.-534    	; 0x32c <writeChar>
 542:	85 e6       	ldi	r24, 0x65	; 101
 544:	f3 de       	rcall	.-538    	; 0x32c <writeChar>
 546:	8d e0       	ldi	r24, 0x0D	; 13
 548:	f1 de       	rcall	.-542    	; 0x32c <writeChar>
		verzenden(DEVICE_ADRES, 8);
 54a:	68 e0       	ldi	r22, 0x08	; 8
 54c:	88 e0       	ldi	r24, 0x08	; 8
 54e:	ae ce       	rjmp	.-676    	; 0x2ac <verzenden>
		break;
 550:	08 95       	ret
		case '0':
		writeChar('\t');writeChar(in);writeChar('\r');
 552:	89 e0       	ldi	r24, 0x09	; 9
 554:	eb de       	rcall	.-554    	; 0x32c <writeChar>
 556:	80 e3       	ldi	r24, 0x30	; 48
 558:	e9 de       	rcall	.-558    	; 0x32c <writeChar>
 55a:	8d e0       	ldi	r24, 0x0D	; 13
 55c:	e7 de       	rcall	.-562    	; 0x32c <writeChar>
		verzenden(DEVICE_ADRES, 0);
 55e:	60 e0       	ldi	r22, 0x00	; 0
 560:	88 e0       	ldi	r24, 0x08	; 8
 562:	a4 ce       	rjmp	.-696    	; 0x2ac <verzenden>
		break;
 564:	08 95       	ret
		case '4':
		writeChar('\t');writeChar(in);writeChar('\r');
 566:	89 e0       	ldi	r24, 0x09	; 9
 568:	e1 de       	rcall	.-574    	; 0x32c <writeChar>
 56a:	84 e3       	ldi	r24, 0x34	; 52
 56c:	df de       	rcall	.-578    	; 0x32c <writeChar>
 56e:	8d e0       	ldi	r24, 0x0D	; 13
 570:	dd de       	rcall	.-582    	; 0x32c <writeChar>
		gaNaarHoekL(180);
 572:	84 eb       	ldi	r24, 0xB4	; 180
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	4d cf       	rjmp	.-358    	; 0x412 <gaNaarHoekL>
		break;
 578:	08 95       	ret
		case '6':
		writeChar('\t');writeChar(in);writeChar('\r');
 57a:	89 e0       	ldi	r24, 0x09	; 9
 57c:	d7 de       	rcall	.-594    	; 0x32c <writeChar>
 57e:	86 e3       	ldi	r24, 0x36	; 54
 580:	d5 de       	rcall	.-598    	; 0x32c <writeChar>
 582:	8d e0       	ldi	r24, 0x0D	; 13
 584:	d3 de       	rcall	.-602    	; 0x32c <writeChar>
		gaNaarHoekR(180);
 586:	84 eb       	ldi	r24, 0xB4	; 180
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	ff ce       	rjmp	.-514    	; 0x38a <gaNaarHoekR>
 58c:	08 95       	ret

0000058e <__vector_25>:
	char buffer[17];
	itoa(number, &buffer[0], base);
	writeString(&buffer[0]);
}

ISR(USART0_RX_vect){
 58e:	1f 92       	push	r1
 590:	0f 92       	push	r0
 592:	0f b6       	in	r0, 0x3f	; 63
 594:	0f 92       	push	r0
 596:	11 24       	eor	r1, r1
 598:	0b b6       	in	r0, 0x3b	; 59
 59a:	0f 92       	push	r0
 59c:	2f 93       	push	r18
 59e:	3f 93       	push	r19
 5a0:	4f 93       	push	r20
 5a2:	5f 93       	push	r21
 5a4:	6f 93       	push	r22
 5a6:	7f 93       	push	r23
 5a8:	8f 93       	push	r24
 5aa:	9f 93       	push	r25
 5ac:	af 93       	push	r26
 5ae:	bf 93       	push	r27
 5b0:	ef 93       	push	r30
 5b2:	ff 93       	push	r31
	Input(UDR0);
 5b4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 5b8:	70 df       	rcall	.-288    	; 0x49a <Input>
}
 5ba:	ff 91       	pop	r31
 5bc:	ef 91       	pop	r30
 5be:	bf 91       	pop	r27
 5c0:	af 91       	pop	r26
 5c2:	9f 91       	pop	r25
 5c4:	8f 91       	pop	r24
 5c6:	7f 91       	pop	r23
 5c8:	6f 91       	pop	r22
 5ca:	5f 91       	pop	r21
 5cc:	4f 91       	pop	r20
 5ce:	3f 91       	pop	r19
 5d0:	2f 91       	pop	r18
 5d2:	0f 90       	pop	r0
 5d4:	0b be       	out	0x3b, r0	; 59
 5d6:	0f 90       	pop	r0
 5d8:	0f be       	out	0x3f, r0	; 63
 5da:	0f 90       	pop	r0
 5dc:	1f 90       	pop	r1
 5de:	18 95       	reti

000005e0 <__divmodhi4>:
 5e0:	97 fb       	bst	r25, 7
 5e2:	07 2e       	mov	r0, r23
 5e4:	16 f4       	brtc	.+4      	; 0x5ea <__divmodhi4+0xa>
 5e6:	00 94       	com	r0
 5e8:	06 d0       	rcall	.+12     	; 0x5f6 <__divmodhi4_neg1>
 5ea:	77 fd       	sbrc	r23, 7
 5ec:	08 d0       	rcall	.+16     	; 0x5fe <__divmodhi4_neg2>
 5ee:	13 d0       	rcall	.+38     	; 0x616 <__udivmodhi4>
 5f0:	07 fc       	sbrc	r0, 7
 5f2:	05 d0       	rcall	.+10     	; 0x5fe <__divmodhi4_neg2>
 5f4:	3e f4       	brtc	.+14     	; 0x604 <__divmodhi4_exit>

000005f6 <__divmodhi4_neg1>:
 5f6:	90 95       	com	r25
 5f8:	81 95       	neg	r24
 5fa:	9f 4f       	sbci	r25, 0xFF	; 255
 5fc:	08 95       	ret

000005fe <__divmodhi4_neg2>:
 5fe:	70 95       	com	r23
 600:	61 95       	neg	r22
 602:	7f 4f       	sbci	r23, 0xFF	; 255

00000604 <__divmodhi4_exit>:
 604:	08 95       	ret

00000606 <__tablejump2__>:
 606:	ee 0f       	add	r30, r30
 608:	ff 1f       	adc	r31, r31
 60a:	88 1f       	adc	r24, r24
 60c:	8b bf       	out	0x3b, r24	; 59
 60e:	07 90       	elpm	r0, Z+
 610:	f6 91       	elpm	r31, Z
 612:	e0 2d       	mov	r30, r0
 614:	19 94       	eijmp

00000616 <__udivmodhi4>:
 616:	aa 1b       	sub	r26, r26
 618:	bb 1b       	sub	r27, r27
 61a:	51 e1       	ldi	r21, 0x11	; 17
 61c:	07 c0       	rjmp	.+14     	; 0x62c <__udivmodhi4_ep>

0000061e <__udivmodhi4_loop>:
 61e:	aa 1f       	adc	r26, r26
 620:	bb 1f       	adc	r27, r27
 622:	a6 17       	cp	r26, r22
 624:	b7 07       	cpc	r27, r23
 626:	10 f0       	brcs	.+4      	; 0x62c <__udivmodhi4_ep>
 628:	a6 1b       	sub	r26, r22
 62a:	b7 0b       	sbc	r27, r23

0000062c <__udivmodhi4_ep>:
 62c:	88 1f       	adc	r24, r24
 62e:	99 1f       	adc	r25, r25
 630:	5a 95       	dec	r21
 632:	a9 f7       	brne	.-22     	; 0x61e <__udivmodhi4_loop>
 634:	80 95       	com	r24
 636:	90 95       	com	r25
 638:	bc 01       	movw	r22, r24
 63a:	cd 01       	movw	r24, r26
 63c:	08 95       	ret

0000063e <_exit>:
 63e:	f8 94       	cli

00000640 <__stop_program>:
 640:	ff cf       	rjmp	.-2      	; 0x640 <__stop_program>
